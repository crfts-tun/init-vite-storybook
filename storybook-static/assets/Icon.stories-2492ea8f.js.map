{"version":3,"file":"Icon.stories-2492ea8f.js","sources":["../../src/Icon/index.tsx","../../constance/icons.ts"],"sourcesContent":["/** lib */\nimport React, { forwardRef, HTMLAttributes } from 'react'\nimport classNames from 'classnames'\n\n/** constance */\nimport { iconList, iconSizes, iconColors } from '@const/icons'\n\n/** type */\nexport type IconType = typeof iconList[number]\nexport type IconSizeType = typeof iconSizes[number]\nexport type IconColorType = typeof iconColors[number]\n\ntype IconProps = HTMLAttributes<HTMLSpanElement> & {\n  icon: IconType\n  size?: IconSizeType\n  color?: IconColorType\n}\n\nconst Icon = forwardRef<HTMLSpanElement, IconProps>(\n  (props, ref): JSX.Element => {\n    const {\n      className,\n      icon,\n      size = '16',\n      color = 'blue',\n      ...restProps\n    } = props\n\n    const sizeClasses: { [key in IconSizeType]: string } = {\n      '12': 'w-[12px] h-[12px]',\n      '16': 'w-[16px] h-[16px]',\n      '20': 'w-[20px] h-[20px]',\n      '24': 'w-[24px] h-[24px]',\n      '32': 'w-[32px] h-[32px]',\n      '40': 'w-[40px] h-[40px]',\n    }\n\n    const iconColorClasses: { [key in IconColorType]: string } = {\n      blue: 'bg-blue-500',\n      green: 'bg-green-500',\n      yellow: 'bg-yellow-500',\n      dark: 'bg-dark-100',\n      light: 'bg-light-100',\n      'light-green': 'bg-light-green-500',\n      'shade-dark': 'bg-shade-dark-500',\n      'shade-light': 'bg-shade-light-500',\n    }\n\n    return (\n      <span\n        ref={ref}\n        className={classNames(\n          'block',\n          iconColorClasses[color],\n          sizeClasses[size],\n          className,\n        )}\n        style={{\n          WebkitMaskImage: icon ? `var(--icon-${icon})` : 'none',\n          maskImage: icon ? `var(--icon-${icon})` : 'none',\n        }}\n        {...restProps}\n      />\n    )\n  },\n)\n\nexport default Icon\n","\nconst iconList = [\n  'null-1',\n  'null-2',\n  'arrowhead-top',\n  'arrowhead-left',\n  'arrowhead-right',\n  'arrowhead-bottom',\n  'arrowhead-sm-top',\n  'arrowhead-sm-left',\n  'arrowhead-sm-right',\n  'arrowhead-sm-bottom',\n  'round-arrow-top',\n  'round-arrow-left',\n  'round-arrow-right',\n  'round-arrow-bottom',\n  'round-solid-arrow-top',\n  'round-solid-arrow-left',\n  'round-solid-arrow-right',\n  'round-solid-arrow-bottom',\n  'bar',\n  'bar-1',\n  'bar-2',\n  'double-bar',\n  'bow-tie',\n  'play',\n  'stop',\n  'pause',\n  'first',\n  'last',\n  'globe',\n  'tako',\n  'kebab',\n  'cheese',\n  'veggie',\n  'meatball',\n  'hamburger',\n  'vespa',\n] as const\n\nconst iconColors = [\n  'blue',\n  'green',\n  'light-green',\n  'yellow',\n  'dark',\n  'light',\n  'shade-dark',\n  'shade-light',\n] as const\n\nconst iconSizes = ['12', '16', '20', '24', '32', '40'] as const\n\nexport {\n  iconList,\n  iconSizes,\n  iconColors\n}"],"names":["Icon","forwardRef","props","ref","className","icon","color","restProps","sizeClasses","_jsx","classNames","size","Icon$1","iconList","iconColors","iconSizes"],"mappings":"yQAkBA,MAAAA,EAAAC,EAAA,WAAA,CAAAC,EAAAC,IAAA,CAEI,KAAA,CAAM,UAAAC,EACJA,KAAAA,EACAC,KAAAA,EAAAA,KACO,MAAAC,EAAA,OACC,GAAAC,CACLA,EAAAA,EAGLC,EAAA,CAAuD,GAAA,oBAC/C,GAAA,oBACA,GAAA,oBACA,GAAA,oBACA,GAAA,oBACA,GAAA,mBACA,EAcR,OAAAC,EAAA,OAAA,CACE,IAAAN,EACE,UAAAO,EAAA,QAbJ,CAA6D,KAAA,cACrD,MAAA,eACC,OAAA,gBACC,KAAA,cACF,MAAA,eACC,cAAA,qBACQ,aAAA,oBACD,cAAA,oBACC,EAKbJ,CAAA,EAAAE,EAAAG,CAAA,EAAAP,CAAA,EAKW,MAAA,CAEJ,gBAAAC,EAAA,cAAAA,KAAA,OAC2C,UAAAA,EAAA,cAAAA,KAAA,MACN,EAC5C,GAAAE,CACIA,CAAAA,CAGV,CAAA,EAGFK,EAAAZ,6sCClEA,MAAMa,EAAW,CACf,SACA,SACA,gBACA,iBACA,kBACA,mBACA,mBACA,oBACA,qBACA,sBACA,kBACA,mBACA,oBACA,qBACA,wBACA,yBACA,0BACA,2BACA,MACA,QACA,QACA,aACA,UACA,OACA,OACA,QACA,QACA,OACA,QACA,OACA,QACA,SACA,SACA,WACA,YACA,OACF,EAEMC,EAAa,CACjB,OACA,QACA,cACA,SACA,OACA,QACA,aACA,aACF,EAEMC,EAAY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}